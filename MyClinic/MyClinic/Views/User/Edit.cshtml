@model MyClinic.Models.UserModels
@using Utilities
@using MyClinic.Resources;
@{
    var objTranslateSwitch = new TranslateSwitch();
    Random rnd = new Random();
    var objSession = Session["user"] as MyClinic.Infrastructure.SessUser;
    HtmlHelper.ClientValidationEnabled = false;
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    ViewBag.Title = Translator.EditUser;
    var imgPath = Model.user.Image;
    var userType = Model.user.UserType;
    string[] Type = { "" };
    if(userType != null || userType !=""){
         Type = userType.Split(new[] { "," }, StringSplitOptions.None);
    }
    var host = @Utilities.Common.host;
    if (Model.user.Image == "" || Model.user.Image == null)
        {
            imgPath = host + "/Uploads/default.jpg";
        }
    else
        {
            imgPath = host + "/Uploads/User/" + Model.user.Id + "/" + Model.user.Id + ".jpg" + "?v=" + rnd.Next(1, 9);
        }
    string check = "checked = checked";
    var displayUserType = string.Empty;
    
    if (objSession.UserType.Contains("SPU"))
    {
        displayUserType = displayUserType + "<input type='checkbox' id='RPV' name='RPV' value='RPV'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "RPV")
            {
                displayUserType = displayUserType +check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Report User</span>";


        displayUserType = displayUserType + "<input type='checkbox' id='USR' name='USR' value='USR'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "USR")
            {
                    displayUserType = displayUserType + check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>User</span>";

        displayUserType = displayUserType + "<input type='checkbox' id='FUR' name='FUR' value='FUR'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "FUR")
            {
                displayUserType = displayUserType + check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Front Office User</span>";
    }
    else
    {

        displayUserType = displayUserType + "<input type='checkbox' id='ADM' name='ADM' value='ADM'"; 
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "ADM")
            {
                displayUserType = displayUserType + check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Admin</span>";

        displayUserType = displayUserType + "<input type='checkbox' id='SPU' name='SPU' value='SPU' " ;
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "SPU")
            {
                displayUserType = displayUserType+ check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Super User</span>";
        displayUserType = displayUserType + "<input type='checkbox' id='RPV' name='RPV' value='RPV'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "RPV")
            {
                displayUserType = displayUserType+ check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Report User</span>";

        displayUserType = displayUserType + "<input type='checkbox' id='USR' name='USR' value='USR'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "USR")
            {
                displayUserType = displayUserType+ check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>User</span>";
        
        
        displayUserType = displayUserType + "<input type='checkbox' id='FUR' name='FUR' value='FUR'";
        for (int index = 0; index < Type.Count(); index++)
        {
            if (Type[index] == "FUR")
            {
                displayUserType = displayUserType+ check; break;
            }
        }
        displayUserType = displayUserType + "><span style='font-weight:700;padding:0 3px;'>Front Office User</span>";
        }
    
    }

<div class="title">@Translator.EditUser</div>
<div class="frm-bx">
    <div class="frm-info">
         <p>@Translator.MessageForm <strong>@Translator.MessageFormBold</strong>. <strong>@Translator.Note:</strong> @Translator.MessageForm1</p>
    </div>
    @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="info-bx" style="width: 40%;">
            <fieldset>
                <table>
                    <tr>
                        <td class="editor-label imp">
                            <Label>@Translator.Name</Label>
                        </td>
                        <td class="editor-field">
                            @Html.TextBox("Name", Model.user.Name) 
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("Name")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label imp">
                            <Label>@Translator.UserName</Label>
                        </td>
                        <td class="editor-field">
                            @Html.TextBox("UserName", Model.user.UserName)
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("UserName")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label imp">
                            <Label>@Translator.Password</Label>
                        </td>
                        <td class="editor-field">
                            @Html.Password("Password")
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("Password")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label imp">
                            <Label>@Translator.ConfirmPassword</Label>
                        </td>
                        <td class="editor-field">
                            @Html.Password("ConfirmPassword")
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("ConfirmPassword")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label">
                            <Label>@Translator.Email</Label>
                        </td>
                        <td class="editor-field">
                            @Html.TextBox("Email", Model.user.Email)
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("Email")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label">
                            <Label>@Translator.Tel</Label>
                        </td>
                        <td class="editor-field">
                            @Html.TextBox("Tel", Model.user.Tel)
                            <div class="error">
                                @Html.Raw(objTranslateSwitch.Get(Html.ValidationMessage("Tel")))
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label1">
                            <Label>@Translator.UserType</Label>
                        </td>
                        <td class="editor-field">
	                         @Html.Raw(displayUserType)
                            <div class="error">
                                @Html.ValidationMessage("UserType")
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td class="editor-label">
                            <Label>@Translator.IsActived</Label>
                            <div class="error">
                                @Html.ValidationMessage("IsActived")
                            </div>
                        </td>
                        <td class="editor-field">
                            <input type="checkbox" id="IsActived" name="IsActived" value="1"  @(Model.user.IsActived == 1 ? "Checked=checked" : "")/>
                        </td>
                    </tr>
                    <tr>
                        <td colspan="2">
                            <input id="btnSubmit" class="myLabel" type="submit" value="@Translator.Save"/>
                        </td>
                        <td colspan="2"></td>
                    </tr> 
                </table>
            </fieldset>
        </div>
        <div class="mda-bx">
            <div class="image-upload">
                @Html.TextBox("Image", "", new { id = "PhotoFileBase", type = "file", accept = "image/*", @style = "width: 0px;height:0px;" })
                <div id="imgPhoto" class="bx-pt">
                    @{
                        string urlImage = Model.userEdit.ImageStream;
                        if (String.IsNullOrEmpty(urlImage))
                        {
                            urlImage = "/Uploads/default.jpg";
                        }
                    }
                    <img id="image" onError="$image.setDefaultImg(this);" src="@urlImage"/>
                </div>
                <input type=hidden name="ImageStream" id="ImageStream" value="@Model.userEdit.ImageStream"/>
            </div>
        </div>
    }
</div>
<script src="@Url.Content("~/Scripts/script.image.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $image.initUpload();
        $transaction.initDefindActionId("1");
        $transaction.initChangeClassMenu("icon-u-m", "icon-u-m-selected");
        $image.strDefaultImage = "/Uploads/default.jpg";
        $Common.initProtectSpaceKey("#UserName");
    });
</script>